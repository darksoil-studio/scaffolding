import { LitElement, css, html } from 'lit';
import { property, state, customElement } from 'lit/decorators.js';
import { ResizeController } from '@lit-labs/observers/resize-controller.js';
import { AppWebsocket, AppClient, ActionHash, encodeHashToBase64, decodeHashFromBase64 } from '@holochain/client';
import { SignalWatcher } from '@darksoil-studio/holochain-signals';
import { Router, hashState, wrapPathInSvg } from '@darksoil-studio/holochain-elements';
import { mdiArrowLeft } from '@mdi/js';
import { provide } from '@lit/context';
import { localized, msg } from '@lit/localize';
import { EntryRecord } from '@darksoil-studio/holochain-utils';

import '@shoelace-style/shoelace/dist/components/spinner/spinner.js';
import '@shoelace-style/shoelace/dist/components/icon-button/icon-button.js';
import '@darksoil-studio/holochain-elements/dist/elements/display-error.js';
import '@darksoil-studio/holochain-elements/dist/elements/app-client-context.js';
// TODO: uncomment this if you choose the profiles-zome as your profiles provider
// import '@darksoil-studio/profiles-zome/dist/elements/profile-prompt.js';
import '@darksoil-studio/profiles-provider/dist/elements/my-profile.js';

import { isMobileContext } from './context.js';
import { appStyles } from './app-styles.js';
import './home-page.js';

export const MOBILE_WIDTH_PX = 600;

@localized()
@customElement('holochain-app')
export class HolochainApp extends SignalWatcher(LitElement) {
  @state() _loading = true;
  @state() _error: unknown | undefined;

  _client!: AppClient;

  @provide({ context: isMobileContext })
  @property()
  _isMobile: boolean = false;

  async firstUpdated() {
    new ResizeController(this, {
      callback: () => {
        this._isMobile = this.getBoundingClientRect().width < MOBILE_WIDTH_PX;
      },
    });

    try {
      this._client = await AppWebsocket.connect();
    } catch (e: unknown) {
      this._error = e;
    } finally {
      this._loading = false;
    }
  }

  render() {
    if (this._loading)
      return html`<div
        class="row"
        style="flex: 1; height: 100%; align-items: center; justify-content: center;"
      >
        <sl-spinner style="font-size: 2rem"></sl-spinner>
      </div>`;

    if (this._error)
      return html`
        <div style="flex: 1; height: 100%; align-items: center; justify-content: center;">
          <display-error .error=${this._error} .headline=${msg("Error connecting to holochain")}>
          </display-error>
        </div>
      `;

    return html`
      <app-client-context .client=${this._client}>
        <profile-prompt style="flex: 1;">
          <home-page style="flex: 1"></home-page>
        </profile-prompt>
      </app-client-context>
    `;
  }

  static styles = [
    css`
      :host {
        display: flex;
        flex: 1;
      }
    `,
    ...appStyles,
  ];
}
